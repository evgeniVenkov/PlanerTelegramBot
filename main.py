import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from dotenv import load_dotenv
from GptClient import GPTClient

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("TOKEN")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏ –∏ —Å–æ–±—ã—Ç–∏—è)
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

gpt_client = GPTClient()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫. –ò—Å–ø–æ–ª—å–∑—É–π /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.")
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start

# –ö–æ–º–∞–Ω–¥–∞ /help
@dp.message(Command("help"))
async def help_handler(message: Message):
    await message.answer("üìå –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n"
                         "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
                         "/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
                         "/add_task - –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n"
                         "/edit_task - –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É")
@dp.message()
async def echo_message(message: Message):
    print(f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.first_name}: {message.text}")
    response =  gpt_client.chat(message.text)

    await message.answer(f"{response}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
